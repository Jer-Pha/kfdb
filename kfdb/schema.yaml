openapi: 3.0.3
info:
  title: Kinda Funny Database API
  version: 0.2.2
  description: Four, sometimes five, best friends gather around this table.
paths:
  /api/channels/:
    get:
      operationId: api_channels_list
      parameters:
      - in: query
        name: name
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChannelList'
          description: ''
    post:
      operationId: api_channels_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Channel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Channel'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
  /api/channels/{id}/:
    get:
      operationId: api_channels_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    put:
      operationId: api_channels_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Channel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Channel'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    patch:
      operationId: api_channels_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    delete:
      operationId: api_channels_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/hosts/:
    get:
      operationId: api_hosts_list
      parameters:
      - in: query
        name: kf_crew
        schema:
          type: boolean
      - in: query
        name: name
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: part_timer
        schema:
          type: boolean
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHostList'
          description: ''
    post:
      operationId: api_hosts_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Host'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Host'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Host'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: ''
  /api/hosts/{id}/:
    get:
      operationId: api_hosts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this host.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: ''
    put:
      operationId: api_hosts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this host.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Host'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Host'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Host'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: ''
    patch:
      operationId: api_hosts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this host.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHost'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: ''
    delete:
      operationId: api_hosts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this host.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/shows/:
    get:
      operationId: api_shows_list
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: name
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShowList'
          description: ''
    post:
      operationId: api_shows_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Show'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Show'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Show'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Show'
          description: ''
  /api/shows/{id}/:
    get:
      operationId: api_shows_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this show.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Show'
          description: ''
    put:
      operationId: api_shows_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this show.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Show'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Show'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Show'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Show'
          description: ''
    patch:
      operationId: api_shows_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this show.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShow'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Show'
          description: ''
    delete:
      operationId: api_shows_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this show.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/videos/:
    get:
      operationId: api_videos_list
      parameters:
      - in: query
        name: blurb
        schema:
          type: string
      - in: query
        name: guests
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: hosts
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: members_only
        schema:
          type: boolean
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: producer
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: short
        schema:
          type: boolean
      - in: query
        name: title
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVideoList'
          description: ''
    post:
      operationId: api_videos_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Video'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
  /api/videos/{id}/:
    get:
      operationId: api_videos_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this video.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    put:
      operationId: api_videos_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this video.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Video'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    patch:
      operationId: api_videos_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this video.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    delete:
      operationId: api_videos_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this video.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Channel:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        blurb:
          type: string
          nullable: true
          description: Optional description of the channel.
      required:
      - name
    Host:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        nicknames:
          nullable: true
          title: Nickname(s)
          description: Should be formatted as a list, not dict.
        kf_crew:
          type: boolean
          title: Kinda Funny Employee
        part_timer:
          type: boolean
        socials:
          nullable: true
          description: Should be formatted as a dict.
        birthday:
          type: string
          format: date
          nullable: true
        blurb:
          type: string
          nullable: true
          description: Optional description or interesting notes about the host.
      required:
      - name
    PaginatedChannelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
    PaginatedHostList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Host'
    PaginatedShowList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Show'
    PaginatedVideoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Video'
    PatchedChannel:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        blurb:
          type: string
          nullable: true
          description: Optional description of the channel.
    PatchedHost:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        nicknames:
          nullable: true
          title: Nickname(s)
          description: Should be formatted as a list, not dict.
        kf_crew:
          type: boolean
          title: Kinda Funny Employee
        part_timer:
          type: boolean
        socials:
          nullable: true
          description: Should be formatted as a dict.
        birthday:
          type: string
          format: date
          nullable: true
        blurb:
          type: string
          nullable: true
          description: Optional description or interesting notes about the host.
    PatchedShow:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        active:
          type: boolean
          title: Is Active
        blurb:
          type: string
          nullable: true
          description: Optional description of the show.
    PatchedVideo:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        release_date:
          type: string
          format: date
          nullable: true
        show:
          type: string
          readOnly: true
        channel:
          type: string
          readOnly: true
        hosts:
          type: array
          items:
            type: string
        guests:
          type: array
          items:
            type: string
        producer:
          type: string
          readOnly: true
        video_id:
          type: string
          maxLength: 11
        link:
          type: string
          format: uri
          maxLength: 43
        blurb:
          type: string
          nullable: true
          description: Optional description of the video.
        short:
          type: boolean
          title: YouTube Short
        members_only:
          type: boolean
          description: The video is only available for YouTube/Patreon members.
    Show:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        active:
          type: boolean
          title: Is Active
        blurb:
          type: string
          nullable: true
          description: Optional description of the show.
      required:
      - name
    Video:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        release_date:
          type: string
          format: date
          nullable: true
        show:
          type: string
          readOnly: true
        channel:
          type: string
          readOnly: true
        hosts:
          type: array
          items:
            type: string
        guests:
          type: array
          items:
            type: string
        producer:
          type: string
          readOnly: true
        video_id:
          type: string
          maxLength: 11
        link:
          type: string
          format: uri
          maxLength: 43
        blurb:
          type: string
          nullable: true
          description: Optional description of the video.
        short:
          type: boolean
          title: YouTube Short
        members_only:
          type: boolean
          description: The video is only available for YouTube/Patreon members.
      required:
      - channel
      - guests
      - hosts
      - producer
      - show
      - title
      - video_id
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
