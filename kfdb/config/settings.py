"""
Django settings for kfdb project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from decouple import config
from dj_database_url import parse as db_url
from pathlib import Path
from sys import argv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", default=True, cast=bool)

# Application definition

PROJECT_APPS = [
    "apps.channels",
    "apps.episodes",
    "apps.hosts",
    "apps.shows",
]

THIRD_PARTY_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    # "rest_framework_json_api",
    "django_filters",
]

INSTALLED_APPS = PROJECT_APPS + THIRD_PARTY_APPS

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

if not DEBUG:
    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = config("SECRET_KEY")
    ALLOWED_HOSTS = config(
        "ALLOWED_HOSTS",
        cast=lambda v: [s.strip() for s in v.split(",")],
    )
else:
    SECRET_KEY = "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrZsTtUuVvWwXxYy"
    ALLOWED_HOSTS = ["localhost", "127.0.0.1"]
    INTERNAL_IPS = ["127.0.0.1"]
    if "test" not in argv:
        INSTALLED_APPS += [
            "debug_toolbar",
        ]
        MIDDLEWARE += [
            "debug_toolbar.middleware.DebugToolbarMiddleware",
        ]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"

# DATABASES

DATABASES = {
    "default": config(
        "DATABASE_URL",
        default="sqlite:///" + str(BASE_DIR / "db.sqlite3"),
        cast=db_url,
    )
}

# Password validation

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": (
            "django.contrib.auth.password_validation"
            + ".UserAttributeSimilarityValidator"
        ),
    },
    {
        "NAME": (
            "django.contrib.auth.password_validation.MinimumLengthValidator"
        ),
    },
    {
        "NAME": (
            "django.contrib.auth.password_validation.CommonPasswordValidator"
        ),
    },
    {
        "NAME": (
            "django.contrib.auth.password_validation.NumericPasswordValidator"
        ),
    },
]


# Internationalization

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files

STATIC_URL = "static/"

# Default primary key field type

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# DRF
# REST_FRAMEWORK = {
#     "PAGE_SIZE": 10,
#     "EXCEPTION_HANDLER": (
#         "rest_framework_json_api.exceptions.exception_handler"
#     ),
#     "DEFAULT_PAGINATION_CLASS": (
#         "rest_framework_json_api.pagination.JsonApiPageNumberPagination"
#     ),
#     "DEFAULT_PARSER_CLASSES": (
#         "rest_framework_json_api.parsers.JSONParser",
#         "rest_framework.parsers.FormParser",
#         "rest_framework.parsers.MultiPartParser",
#     ),
#     "DEFAULT_RENDERER_CLASSES": (
#         "rest_framework_json_api.renderers.JSONRenderer",
#         # If you're performance testing, you will want to use the
#         # browseable API without forms, as the forms can generate their
#         # own queries. If performance testing, enable:
#         # "config.utils.BrowsableAPIRendererWithoutForms",
#         # Otherwise, to play around with the browseable API, enable:
#         "rest_framework_json_api.renderers.BrowsableAPIRenderer",
#     ),
#     "DEFAULT_METADATA_CLASS": (
#         "rest_framework_json_api.metadata.JSONAPIMetadata"
#     ),
#     "DEFAULT_SCHEMA_CLASS": (
#         "rest_framework_json_api.schemas.openapi.AutoSchema"
#     ),
#     "DEFAULT_FILTER_BACKENDS": (
#         "rest_framework_json_api.filters.QueryParameterValidationFilter",
#         "rest_framework_json_api.filters.OrderingFilter",
#         "rest_framework_json_api.django_filters.DjangoFilterBackend",
#         "rest_framework.filters.SearchFilter",
#     ),
#     "SEARCH_PARAM": "filter[search]",
#     "TEST_REQUEST_RENDERER_CLASSES": (
#         "rest_framework_json_api.renderers.JSONRenderer",
#     ),
#     "TEST_REQUEST_DEFAULT_FORMAT": "vnd.api+json",
# }

REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.BasicAuthentication",
        "rest_framework.authentication.SessionAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": (
        "rest_framework.permissions.IsAuthenticatedOrReadOnly",
    ),
    "DEFAULT_FILTER_BACKENDS": (
        "django_filters.rest_framework.DjangoFilterBackend",
        "rest_framework.filters.SearchFilter",
    ),
}
